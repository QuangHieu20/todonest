name: "Deploy code to production"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ============= Build ===============
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Backend
        run: |
          cd be
          docker build -f ../.docker/be/Dockerfile -t todo-be:latest . || { echo "Backend build failed"; exit 1; }

      - name: Build Frontend
        run: |
          cd fe
          docker build -f ../.docker/fe/Dockerfile -t todo-fe:latest . || { echo "Frontend build failed"; exit 1; }

      - name: ✅ Build Test Completed
        run: echo "Build test completed successfully!"

  # ============= Deploy ===============
  deploy:
    name: Deploy to Production
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Docker Status
        run: |
          echo "🐳 Checking Docker status..."
          docker --version
          docker-compose --version
          docker ps -a
          docker images

      - name: Start Deploy
        run: |
          echo "📥 Code already checked out..."
          
          # Force stop and remove all containers
          echo "⏹️ Force stopping all containers..."
          docker-compose -f docker-compose.yml down --remove-orphans --volumes || true
          
          # Kill any processes using ports 3000 and 4000
          echo "🔫 Killing processes on ports 3000 and 4000..."
          lsof -ti:3000 | xargs -r kill -9 || true
          lsof -ti:4000 | xargs -r kill -9 || true
          
          # Remove any dangling containers and networks
          echo "🧹 Cleaning up Docker resources..."
          docker container prune -f || true
          docker network prune -f || true
          docker image prune -f || true
          
          # Wait a bit for ports to be released
          echo "⏳ Waiting for ports to be released..."
          sleep 5
          
          # Check if ports are free
          echo "🔍 Checking port availability..."
          if lsof -i:3000; then
            echo "❌ Port 3000 is still in use"
            exit 1
          fi
          if lsof -i:4000; then
            echo "❌ Port 4000 is still in use"
            exit 1
          fi
          echo "✅ Ports 3000 and 4000 are free"
          
          # Build and start with production environment
          echo "🚀 Building and starting containers..."
          docker-compose -f docker-compose.yml build --no-cache || { echo "Docker build failed"; exit 1; }
          docker-compose -f docker-compose.yml up -d || { echo "Docker up failed"; exit 1; }
          
          # Health check
          echo "🏥 Performing health check..."
          sleep 30
          
          # Check if containers are running
          if ! docker-compose -f docker-compose.yml ps | grep -q "Up"; then
            echo "❌ Containers are not running properly"
            docker-compose -f docker-compose.yml logs
            exit 1
          fi
          
          # Try health check on frontend port
          if curl -f http://localhost:3000/ > /dev/null 2>&1; then
            echo "✅ Frontend health check passed"
          else
            echo "⚠️ Frontend health check failed, but continuing..."
          fi
          
          echo "✅ Deployment completed successfully!"
          echo "🌐 Frontend: https://todonest.id.vn"
          echo "🌐 Backend API: https://todonest.id.vn/api"
